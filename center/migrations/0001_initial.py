# Generated by Django 4.2.4 on 2024-05-26 22:39

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Project Name')),
                ('description', models.TextField(verbose_name='Project Description')),
                ('status', models.CharField(choices=[('Planning', 'Planning'), ('Ongoing', 'Ongoing'), ('Completed', 'Completed'), ('On Hold', 'On Hold')], default='Planning', max_length=10, verbose_name='Project Status')),
                ('start_date', models.DateField(default=django.utils.timezone.now, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('contact_name', models.CharField(max_length=100, verbose_name='Contact Name')),
                ('contact_email', models.EmailField(max_length=254, verbose_name='Contact Email')),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Contact Phone')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('image', models.ImageField(upload_to='images/')),
                ('adresse', models.CharField(blank=True, max_length=20, null=True)),
                ('Bank_name', models.CharField(blank=True, max_length=20, null=True)),
                ('salair_type', models.CharField(blank=True, choices=[('Hourly', 'Hourly'), ('Daily', 'Daily'), ('Weekly', 'Weekly'), ('Monthly', 'Monthly')], max_length=80, null=True)),
                ('salair_month', models.CharField(blank=True, max_length=20, null=True)),
                ('Payment_type', models.CharField(blank=True, choices=[('Bank transfer', 'Bank transfer'), ('Check', 'Check'), ('Cash', 'Cash')], max_length=80, null=True)),
                ('nationality', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('passport', models.CharField(max_length=20)),
                ('cin', models.CharField(max_length=20)),
                ('date_birthday', models.DateField(blank=True, null=True)),
                ('poste', models.CharField(blank=True, choices=[('Admin', 'Admin'), ('Employee', 'Employee')], default='employee', max_length=80, null=True)),
                ('status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Inactive', max_length=8, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Masculin', 'Masculin'), ('Féminin', 'Féminin')], max_length=8, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
